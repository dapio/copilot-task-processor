/* Management Components Styles */
/* ThinkCode AI Platform - Comprehensive styles for agent, task, workflow, and mockup management */

/* Loading States */
.loadingContainer {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  min-height: 400px;
  padding: 2rem;
}

.loadingSpinner {
  font-size: 4rem;
  margin-bottom: 1rem;
  animation: spin 1s linear infinite;
}

.loadingText {
  color: rgba(255, 255, 255, 0.8);
  font-size: 1.1rem;
  margin: 0;
}

@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

/* Management Container */
.managementContainer {
  display: flex;
  flex-direction: column;
  gap: 2rem;
  padding: 0;
}

/* Header Styles */
.managementHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  background: rgba(255, 255, 255, 0.05);
  -webkit-backdrop-filter: blur(15px);
  backdrop-filter: blur(15px);
  border: 1px solid rgba(255, 255, 255, 0.1);
  border-radius: 16px;
  padding: 1.5rem;
  flex-wrap: wrap;
  gap: 1rem;
}

.headerLeft {
  display: flex;
  align-items: center;
  gap: 1rem;
  flex: 1;
  min-width: 250px;
}

.headerRight {
  display: flex;
  align-items: center;
  gap: 1.5rem;
}

/* Search */
.searchContainer {
  position: relative;
  min-width: 250px;
}

.searchInput {
  width: 100%;
  padding: 0.75rem 1rem 0.75rem 2.5rem;
  border: 1px solid rgba(255, 255, 255, 0.2);
  border-radius: 12px;
  background: rgba(255, 255, 255, 0.08);
  -webkit-backdrop-filter: blur(10px);
  backdrop-filter: blur(10px);
  color: #ffffff;
  font-size: 0.95rem;
  transition: all 0.3s ease;
}

.searchInput::placeholder {
  color: rgba(255, 255, 255, 0.5);
}

.searchInput:focus {
  outline: none;
  border-color: rgba(255, 255, 255, 0.4);
  background: rgba(255, 255, 255, 0.12);
}

.searchIcon {
  position: absolute;
  left: 0.75rem;
  top: 50%;
  transform: translateY(-50%);
  font-size: 1.1rem;
  opacity: 0.7;
  pointer-events: none;
}

/* Filters */
.filtersContainer {
  display: flex;
  gap: 0.75rem;
}

.filterSelect {
  padding: 0.5rem 0.75rem;
  border: 1px solid rgba(255, 255, 255, 0.2);
  border-radius: 8px;
  background: rgba(255, 255, 255, 0.08);
  -webkit-backdrop-filter: blur(10px);
  backdrop-filter: blur(10px);
  color: #ffffff;
  font-size: 0.9rem;
  cursor: pointer;
  transition: all 0.3s ease;
}

.filterSelect:focus {
  outline: none;
  border-color: rgba(255, 255, 255, 0.4);
}

.filterSelect option {
  background: #2c3e50;
  color: #ffffff;
}

/* Stats */
.statsContainer {
  display: flex;
  gap: 1rem;
}

.statBadge {
  display: flex;
  flex-direction: column;
  align-items: center;
  padding: 0.75rem 1rem;
  background: rgba(255, 255, 255, 0.08);
  -webkit-backdrop-filter: blur(10px);
  backdrop-filter: blur(10px);
  border: 1px solid rgba(255, 255, 255, 0.15);
  border-radius: 12px;
  min-width: 70px;
}

.statBadge[data-status='active'] {
  border-color: rgba(46, 213, 115, 0.3);
  background: rgba(46, 213, 115, 0.1);
}

.statBadge[data-status='inactive'] {
  border-color: rgba(116, 125, 140, 0.3);
  background: rgba(116, 125, 140, 0.1);
}

.statBadge[data-status='running'] {
  border-color: rgba(55, 66, 250, 0.3);
  background: rgba(55, 66, 250, 0.1);
}

.statBadge[data-status='pending'] {
  border-color: rgba(255, 165, 2, 0.3);
  background: rgba(255, 165, 2, 0.1);
}

.statNumber {
  font-size: 1.5rem;
  font-weight: 700;
  color: #ffffff;
  line-height: 1;
  margin-bottom: 0.25rem;
}

.statLabel {
  font-size: 0.7rem;
  color: rgba(255, 255, 255, 0.7);
  text-transform: uppercase;
  letter-spacing: 0.5px;
  line-height: 1;
}

/* Create Button */
.createButton {
  background: linear-gradient(135deg, #00d4aa 0%, #01a085 100%);
  border: none;
  padding: 0.75rem 1.5rem;
  border-radius: 12px;
  color: white;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.3s ease;
  display: flex;
  align-items: center;
  gap: 0.5rem;
  font-size: 0.95rem;
  box-shadow: 0 4px 15px rgba(0, 212, 170, 0.3);
}

.createButton:hover {
  transform: translateY(-2px);
  box-shadow: 0 6px 20px rgba(0, 212, 170, 0.4);
}

.buttonIcon {
  font-size: 1rem;
}

/* Items Grid */
.itemsGrid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
  gap: 1.5rem;
}

/* Item Cards */
.itemCard {
  background: rgba(255, 255, 255, 0.05);
  -webkit-backdrop-filter: blur(15px);
  backdrop-filter: blur(15px);
  border: 1px solid rgba(255, 255, 255, 0.1);
  border-radius: 16px;
  padding: 1.5rem;
  transition: all 0.3s ease;
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

.itemCard:hover {
  transform: translateY(-4px);
  border-color: rgba(255, 255, 255, 0.2);
  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
}

.itemCard[data-status='active'] {
  border-left: 4px solid #2ed573;
}

.itemCard[data-status='inactive'] {
  border-left: 4px solid #747d8c;
}

.itemCard[data-status='running'] {
  border-left: 4px solid #3742fa;
}

.itemCard[data-status='pending'] {
  border-left: 4px solid #ffa502;
}

.itemCard[data-status='completed'] {
  border-left: 4px solid #2ed573;
}

.itemCard[data-status='failed'] {
  border-left: 4px solid #ff4757;
}

/* Card Header */
.cardHeader {
  display: flex;
  justify-content: space-between;
  align-items: flex-start;
  margin-bottom: 0.5rem;
}

.cardTitle {
  display: flex;
  align-items: center;
  gap: 0.75rem;
  flex: 1;
}

.itemIcon {
  font-size: 1.5rem;
  opacity: 0.9;
}

.itemName {
  font-size: 1.1rem;
  font-weight: 600;
  color: #ffffff;
  line-height: 1.3;
}

.cardActions {
  display: flex;
  gap: 0.5rem;
}

.statusToggle,
.editButton,
.deleteButton,
.executeButton,
.viewButton {
  background: rgba(255, 255, 255, 0.1);
  border: 1px solid rgba(255, 255, 255, 0.2);
  border-radius: 8px;
  padding: 0.5rem;
  cursor: pointer;
  transition: all 0.3s ease;
  display: flex;
  align-items: center;
  justify-content: center;
  width: 36px;
  height: 36px;
  font-size: 0.9rem;
}

.statusToggle:hover,
.editButton:hover,
.deleteButton:hover,
.executeButton:hover,
.viewButton:hover {
  background: rgba(255, 255, 255, 0.15);
  border-color: rgba(255, 255, 255, 0.3);
  transform: scale(1.05);
}

.statusToggle[data-status='active'] {
  background: rgba(46, 213, 115, 0.2);
  border-color: rgba(46, 213, 115, 0.4);
}

.executeButton {
  background: rgba(55, 66, 250, 0.2);
  border-color: rgba(55, 66, 250, 0.4);
}

.deleteButton {
  background: rgba(255, 71, 87, 0.2);
  border-color: rgba(255, 71, 87, 0.4);
}

/* Card Content */
.cardContent {
  flex: 1;
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

.itemMeta {
  display: flex;
  justify-content: space-between;
  align-items: center;
  flex-wrap: wrap;
  gap: 0.5rem;
}

.itemType {
  background: rgba(255, 255, 255, 0.1);
  color: rgba(255, 255, 255, 0.8);
  padding: 0.3rem 0.75rem;
  border-radius: 12px;
  font-size: 0.8rem;
  font-weight: 500;
}

.lastUsed {
  color: rgba(255, 255, 255, 0.6);
  font-size: 0.8rem;
}

.itemDescription {
  color: rgba(255, 255, 255, 0.8);
  font-size: 0.9rem;
  line-height: 1.5;
  margin: 0;
}

/* Capabilities */
.capabilitiesList {
  display: flex;
  flex-wrap: wrap;
  gap: 0.5rem;
}

.capabilityTag {
  background: rgba(0, 212, 170, 0.15);
  color: rgba(0, 212, 170, 0.9);
  padding: 0.3rem 0.6rem;
  border-radius: 10px;
  font-size: 0.75rem;
  font-weight: 500;
  border: 1px solid rgba(0, 212, 170, 0.3);
}

.moreCapabilities {
  color: rgba(255, 255, 255, 0.6);
  font-size: 0.75rem;
  font-style: italic;
  padding: 0.3rem 0;
}

/* Card Footer */
.cardFooter {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding-top: 0.75rem;
  border-top: 1px solid rgba(255, 255, 255, 0.1);
}

.configInfo {
  display: flex;
  gap: 0.5rem;
  align-items: center;
}

.configLabel {
  color: rgba(255, 255, 255, 0.6);
  font-size: 0.8rem;
}

.configCount {
  color: rgba(255, 255, 255, 0.8);
  font-size: 0.8rem;
  font-weight: 500;
}

.statusIndicator {
  font-size: 0.8rem;
  font-weight: 500;
}

.statusIndicator[data-status='active'] {
  color: #2ed573;
}
.statusIndicator[data-status='inactive'] {
  color: #747d8c;
}
.statusIndicator[data-status='running'] {
  color: #3742fa;
}
.statusIndicator[data-status='pending'] {
  color: #ffa502;
}
.statusIndicator[data-status='completed'] {
  color: #2ed573;
}
.statusIndicator[data-status='failed'] {
  color: #ff4757;
}

/* Tasks List (Alternative Layout) */
.tasksList {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

.taskCard {
  background: rgba(255, 255, 255, 0.05);
  -webkit-backdrop-filter: blur(15px);
  backdrop-filter: blur(15px);
  border: 1px solid rgba(255, 255, 255, 0.1);
  border-radius: 16px;
  padding: 1.5rem;
  transition: all 0.3s ease;
}

.taskCard:hover {
  transform: translateY(-2px);
  border-color: rgba(255, 255, 255, 0.2);
  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
}

.taskHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 1rem;
}

.taskTitle {
  display: flex;
  align-items: center;
  gap: 1rem;
}

.taskIcon {
  font-size: 1.3rem;
  opacity: 0.9;
}

.taskName {
  font-size: 1.1rem;
  font-weight: 600;
  color: #ffffff;
}

.taskActions {
  display: flex;
  gap: 0.5rem;
}

/* Priority Badge */
.priorityBadge {
  padding: 0.3rem 0.8rem;
  border-radius: 12px;
  font-size: 0.75rem;
  font-weight: 600;
  text-transform: uppercase;
  letter-spacing: 0.5px;
  margin-left: 1rem;
}

.priorityBadge[data-priority='critical'] {
  background: rgba(255, 71, 87, 0.2);
  color: #ff4757;
  border: 1px solid rgba(255, 71, 87, 0.4);
}

.priorityBadge[data-priority='high'] {
  background: rgba(255, 107, 53, 0.2);
  color: #ff6b35;
  border: 1px solid rgba(255, 107, 53, 0.4);
}

.priorityBadge[data-priority='medium'] {
  background: rgba(255, 165, 2, 0.2);
  color: #ffa502;
  border: 1px solid rgba(255, 165, 2, 0.4);
}

.priorityBadge[data-priority='low'] {
  background: rgba(46, 213, 115, 0.2);
  color: #2ed573;
  border: 1px solid rgba(46, 213, 115, 0.4);
}

/* Status Badge */
.statusBadge {
  padding: 0.3rem 0.8rem;
  border-radius: 12px;
  font-size: 0.75rem;
  font-weight: 600;
  text-transform: uppercase;
  letter-spacing: 0.5px;
}

.statusBadge[data-status='pending'] {
  background: rgba(116, 125, 140, 0.2);
  color: #747d8c;
  border: 1px solid rgba(116, 125, 140, 0.4);
}

.statusBadge[data-status='running'] {
  background: rgba(55, 66, 250, 0.2);
  color: #3742fa;
  border: 1px solid rgba(55, 66, 250, 0.4);
}

.statusBadge[data-status='completed'] {
  background: rgba(46, 213, 115, 0.2);
  color: #2ed573;
  border: 1px solid rgba(46, 213, 115, 0.4);
}

.statusBadge[data-status='failed'] {
  background: rgba(255, 71, 87, 0.2);
  color: #ff4757;
  border: 1px solid rgba(255, 71, 87, 0.4);
}

/* Task Content */
.taskContent {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

.taskDescription {
  color: rgba(255, 255, 255, 0.8);
  font-size: 0.9rem;
  line-height: 1.5;
  margin: 0;
}

.taskMeta {
  display: flex;
  flex-wrap: wrap;
  gap: 1.5rem;
  align-items: center;
}

.metaItem {
  display: flex;
  gap: 0.5rem;
  align-items: center;
}

.metaLabel {
  color: rgba(255, 255, 255, 0.6);
  font-size: 0.8rem;
  font-weight: 500;
}

.metaValue {
  color: rgba(255, 255, 255, 0.9);
  font-size: 0.8rem;
  font-weight: 500;
}

/* Progress Section */
.progressSection {
  margin-top: 0.5rem;
}

.progressHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 0.5rem;
}

.progressLabel {
  color: rgba(255, 255, 255, 0.7);
  font-size: 0.8rem;
  font-weight: 500;
}

.progressValue {
  color: #ffffff;
  font-size: 0.8rem;
  font-weight: 600;
}

.progressBar {
  background: rgba(255, 255, 255, 0.1);
  border-radius: 8px;
  height: 6px;
  overflow: hidden;
}

.progressFill {
  height: 100%;
  border-radius: 8px;
  transition: width 0.8s ease;
}

/* Dynamic progress width using data attributes */
.progressFill[data-progress='0'] {
  width: 0%;
}
.progressFill[data-progress='5'] {
  width: 5%;
}
.progressFill[data-progress='10'] {
  width: 10%;
}
.progressFill[data-progress='15'] {
  width: 15%;
}
.progressFill[data-progress='20'] {
  width: 20%;
}
.progressFill[data-progress='25'] {
  width: 25%;
}
.progressFill[data-progress='30'] {
  width: 30%;
}
.progressFill[data-progress='35'] {
  width: 35%;
}
.progressFill[data-progress='40'] {
  width: 40%;
}
.progressFill[data-progress='45'] {
  width: 45%;
}
.progressFill[data-progress='50'] {
  width: 50%;
}
.progressFill[data-progress='55'] {
  width: 55%;
}
.progressFill[data-progress='60'] {
  width: 60%;
}
.progressFill[data-progress='65'] {
  width: 65%;
}
.progressFill[data-progress='70'] {
  width: 70%;
}
.progressFill[data-progress='75'] {
  width: 75%;
}
.progressFill[data-progress='80'] {
  width: 80%;
}
.progressFill[data-progress='85'] {
  width: 85%;
}
.progressFill[data-progress='90'] {
  width: 90%;
}
.progressFill[data-progress='95'] {
  width: 95%;
}
.progressFill[data-progress='100'] {
  width: 100%;
}

/* Status-based progress colors */
.progressFill[data-status='pending'] {
  background: linear-gradient(90deg, #747d8c 0%, #57606f 100%);
}
.progressFill[data-status='running'] {
  background: linear-gradient(90deg, #3742fa 0%, #2f3542 100%);
}
.progressFill[data-status='completed'] {
  background: linear-gradient(90deg, #2ed573 0%, #1e90ff 100%);
}
.progressFill[data-status='failed'] {
  background: linear-gradient(90deg, #ff4757 0%, #c44569 100%);
}

/* Tags List */
.tagsList {
  display: flex;
  flex-wrap: wrap;
  gap: 0.5rem;
}

.tag {
  background: rgba(255, 255, 255, 0.1);
  color: rgba(255, 255, 255, 0.8);
  padding: 0.3rem 0.6rem;
  border-radius: 10px;
  font-size: 0.75rem;
  font-weight: 500;
  display: flex;
  align-items: center;
  gap: 0.3rem;
}

.removeTag {
  background: none;
  border: none;
  color: rgba(255, 255, 255, 0.6);
  cursor: pointer;
  padding: 0;
  font-size: 0.8rem;
  line-height: 1;
  transition: color 0.3s ease;
}

.removeTag:hover {
  color: rgba(255, 255, 255, 0.9);
}

/* Error Message */
.errorMessage {
  background: rgba(255, 71, 87, 0.1);
  border: 1px solid rgba(255, 71, 87, 0.3);
  color: rgba(255, 71, 87, 0.9);
  padding: 0.75rem 1rem;
  border-radius: 8px;
  font-size: 0.85rem;
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.errorIcon {
  font-size: 1rem;
}

/* Empty State */
.emptyState {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  text-align: center;
  padding: 4rem 2rem;
  min-height: 300px;
  background: rgba(255, 255, 255, 0.02);
  border: 2px dashed rgba(255, 255, 255, 0.1);
  border-radius: 20px;
}

.emptyIcon {
  font-size: 4rem;
  margin-bottom: 1.5rem;
  opacity: 0.6;
  animation: pulse-glow 2s ease-in-out infinite alternate;
}

.emptyTitle {
  margin: 0 0 1rem 0;
  font-size: 1.5rem;
  font-weight: 600;
  color: rgba(255, 255, 255, 0.9);
}

.emptyDescription {
  margin: 0 0 2rem 0;
  color: rgba(255, 255, 255, 0.7);
  font-size: 1rem;
  line-height: 1.5;
  max-width: 400px;
}

.emptyAction {
  background: linear-gradient(135deg, #00d4aa 0%, #01a085 100%);
  border: none;
  padding: 1rem 2rem;
  border-radius: 12px;
  color: white;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.3s ease;
  font-size: 1rem;
  box-shadow: 0 4px 20px rgba(0, 212, 170, 0.3);
}

.emptyAction:hover {
  transform: translateY(-2px);
  box-shadow: 0 6px 25px rgba(0, 212, 170, 0.4);
}

/* Modal Styles */
.modalOverlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.7);
  -webkit-backdrop-filter: blur(5px);
  backdrop-filter: blur(5px);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1000;
  padding: 1rem;
}

.modal {
  background: rgba(255, 255, 255, 0.1);
  -webkit-backdrop-filter: blur(25px);
  backdrop-filter: blur(25px);
  border: 1px solid rgba(255, 255, 255, 0.2);
  border-radius: 20px;
  padding: 0;
  width: 100%;
  max-width: 600px;
  max-height: 80vh;
  overflow-y: auto;
  animation: modal-appear 0.3s ease-out;
}

@keyframes modal-appear {
  from {
    opacity: 0;
    transform: scale(0.9) translateY(20px);
  }
  to {
    opacity: 1;
    transform: scale(1) translateY(0);
  }
}

.modalHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 1.5rem 2rem;
  border-bottom: 1px solid rgba(255, 255, 255, 0.1);
}

.modalTitle {
  margin: 0;
  font-size: 1.3rem;
  font-weight: 600;
  color: #ffffff;
}

.closeButton {
  background: rgba(255, 255, 255, 0.1);
  border: 1px solid rgba(255, 255, 255, 0.2);
  border-radius: 8px;
  width: 32px;
  height: 32px;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  color: rgba(255, 255, 255, 0.7);
  transition: all 0.3s ease;
}

.closeButton:hover {
  background: rgba(255, 255, 255, 0.15);
  color: rgba(255, 255, 255, 0.9);
}

/* Modal Form */
.modalForm {
  padding: 2rem;
}

.formGroup {
  margin-bottom: 1.5rem;
}

.formRow {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 1rem;
}

.formLabel {
  display: block;
  margin-bottom: 0.5rem;
  color: rgba(255, 255, 255, 0.9);
  font-size: 0.9rem;
  font-weight: 500;
}

.formInput,
.formTextarea,
.formSelect {
  width: 100%;
  padding: 0.75rem 1rem;
  border: 1px solid rgba(255, 255, 255, 0.2);
  border-radius: 8px;
  background: rgba(255, 255, 255, 0.08);
  -webkit-backdrop-filter: blur(10px);
  backdrop-filter: blur(10px);
  color: #ffffff;
  font-size: 0.9rem;
  transition: all 0.3s ease;
  resize: vertical;
}

.formInput::placeholder,
.formTextarea::placeholder {
  color: rgba(255, 255, 255, 0.5);
}

.formInput:focus,
.formTextarea:focus,
.formSelect:focus {
  outline: none;
  border-color: rgba(255, 255, 255, 0.4);
  background: rgba(255, 255, 255, 0.12);
}

.formSelect option {
  background: #2c3e50;
  color: #ffffff;
}

/* Capability/Tag Input */
.capabilityInput,
.tagInput {
  display: flex;
  gap: 0.5rem;
  align-items: flex-end;
}

.capabilityInput .formInput,
.tagInput .formInput {
  flex: 1;
}

.addCapabilityButton,
.addTagButton {
  background: linear-gradient(135deg, #00d4aa 0%, #01a085 100%);
  border: none;
  border-radius: 8px;
  width: 40px;
  height: 40px;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  color: white;
  font-size: 1rem;
  transition: all 0.3s ease;
  flex-shrink: 0;
}

.addCapabilityButton:hover,
.addTagButton:hover {
  transform: scale(1.05);
  box-shadow: 0 4px 15px rgba(0, 212, 170, 0.3);
}

/* Modal Actions */
.modalActions {
  display: flex;
  justify-content: flex-end;
  gap: 1rem;
  padding: 1.5rem 2rem;
  border-top: 1px solid rgba(255, 255, 255, 0.1);
  margin-top: 1rem;
}

.cancelButton {
  background: rgba(255, 255, 255, 0.1);
  border: 1px solid rgba(255, 255, 255, 0.2);
  color: rgba(255, 255, 255, 0.8);
  padding: 0.75rem 1.5rem;
  border-radius: 8px;
  cursor: pointer;
  transition: all 0.3s ease;
  font-weight: 500;
}

.cancelButton:hover {
  background: rgba(255, 255, 255, 0.15);
  color: rgba(255, 255, 255, 0.9);
}

.submitButton {
  background: linear-gradient(135deg, #00d4aa 0%, #01a085 100%);
  border: none;
  color: white;
  padding: 0.75rem 1.5rem;
  border-radius: 8px;
  cursor: pointer;
  transition: all 0.3s ease;
  font-weight: 600;
  box-shadow: 0 4px 15px rgba(0, 212, 170, 0.3);
}

.submitButton:hover {
  transform: translateY(-1px);
  box-shadow: 0 6px 20px rgba(0, 212, 170, 0.4);
}

/* Task Details */
.taskDetails {
  padding: 0 2rem 1rem 2rem;
}

.detailSection {
  margin-bottom: 1.5rem;
}

.sectionTitle {
  margin: 0 0 1rem 0;
  font-size: 1.1rem;
  font-weight: 600;
  color: #ffffff;
  border-bottom: 1px solid rgba(255, 255, 255, 0.1);
  padding-bottom: 0.5rem;
}

.detailGrid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  gap: 1rem;
}

.detailItem {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 0.5rem 0;
}

.detailLabel {
  color: rgba(255, 255, 255, 0.7);
  font-size: 0.9rem;
  font-weight: 500;
}

.detailValue {
  color: rgba(255, 255, 255, 0.9);
  font-size: 0.9rem;
  font-weight: 500;
}

.resultsCode {
  background: rgba(0, 0, 0, 0.3);
  border: 1px solid rgba(255, 255, 255, 0.1);
  border-radius: 8px;
  padding: 1rem;
  color: rgba(255, 255, 255, 0.8);
  font-family: 'Courier New', monospace;
  font-size: 0.8rem;
  line-height: 1.4;
  overflow-x: auto;
}

/* Configuration Section */
.configSection {
  margin-top: 1rem;
}

.configGrid {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

.configItem {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 0.5rem 0;
  border-bottom: 1px solid rgba(255, 255, 255, 0.1);
}

.configKey {
  color: rgba(255, 255, 255, 0.7);
  font-size: 0.85rem;
  font-weight: 500;
}

.configValue {
  color: rgba(255, 255, 255, 0.9);
  font-size: 0.85rem;
  font-family: 'Courier New', monospace;
  background: rgba(255, 255, 255, 0.05);
  padding: 0.2rem 0.4rem;
  border-radius: 4px;
}

/* Workflow Specific Styles */
.workflowStats {
  display: flex;
  justify-content: space-between;
  margin: 1rem 0;
  background: rgba(255, 255, 255, 0.05);
  border-radius: 8px;
  padding: 0.75rem;
}

.workflowStats .statItem {
  display: flex;
  flex-direction: column;
  align-items: center;
  text-align: center;
}

.workflowStats .statLabel {
  color: rgba(255, 255, 255, 0.6);
  font-size: 0.7rem;
  text-transform: uppercase;
  letter-spacing: 0.5px;
  margin-bottom: 0.25rem;
}

.workflowStats .statValue {
  color: #ffffff;
  font-size: 1rem;
  font-weight: 600;
}

.triggersList {
  margin-top: 0.75rem;
}

.triggersLabel {
  color: rgba(255, 255, 255, 0.7);
  font-size: 0.8rem;
  font-weight: 500;
  margin-bottom: 0.5rem;
  display: block;
}

.triggers {
  display: flex;
  flex-wrap: wrap;
  gap: 0.4rem;
}

.triggerTag {
  background: rgba(102, 126, 234, 0.15);
  color: rgba(102, 126, 234, 0.9);
  padding: 0.25rem 0.6rem;
  border-radius: 8px;
  font-size: 0.7rem;
  font-weight: 500;
  border: 1px solid rgba(102, 126, 234, 0.3);
  text-transform: capitalize;
}

/* Trigger Selection */
.triggerGrid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
  gap: 0.75rem;
  margin-top: 0.5rem;
}

.triggerOption {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.5rem;
  background: rgba(255, 255, 255, 0.05);
  border-radius: 8px;
  cursor: pointer;
  transition: all 0.3s ease;
}

.triggerOption:hover {
  background: rgba(255, 255, 255, 0.1);
}

.triggerCheckbox {
  width: 16px;
  height: 16px;
  accent-color: #00d4aa;
}

.triggerLabel {
  color: rgba(255, 255, 255, 0.8);
  font-size: 0.85rem;
  text-transform: capitalize;
}

/* Steps List */
.stepsList {
  display: flex;
  flex-direction: column;
  gap: 0.75rem;
}

.stepItem {
  display: flex;
  align-items: center;
  gap: 1rem;
  padding: 0.75rem;
  background: rgba(255, 255, 255, 0.05);
  border-radius: 8px;
  border-left: 3px solid rgba(0, 212, 170, 0.6);
}

.stepNumber {
  background: rgba(0, 212, 170, 0.2);
  color: rgba(0, 212, 170, 0.9);
  width: 28px;
  height: 28px;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 0.8rem;
  font-weight: 600;
  border: 1px solid rgba(0, 212, 170, 0.4);
  flex-shrink: 0;
}

.stepContent {
  flex: 1;
}

.stepName {
  color: rgba(255, 255, 255, 0.9);
  font-size: 0.9rem;
  font-weight: 500;
  margin-bottom: 0.25rem;
}

.stepType {
  color: rgba(255, 255, 255, 0.6);
  font-size: 0.75rem;
  text-transform: uppercase;
  letter-spacing: 0.5px;
}

/* Animations */
@keyframes pulse-glow {
  0% {
    opacity: 0.6;
  }
  100% {
    opacity: 1;
  }
}

/* Responsive Design */
@media (max-width: 768px) {
  .managementHeader {
    flex-direction: column;
    align-items: stretch;
    gap: 1rem;
  }

  .headerLeft {
    flex-direction: column;
    gap: 1rem;
  }

  .headerRight {
    flex-direction: column;
    gap: 1rem;
  }

  .statsContainer {
    justify-content: center;
  }

  .searchContainer {
    min-width: auto;
  }

  .filtersContainer {
    justify-content: center;
  }

  .itemsGrid {
    grid-template-columns: 1fr;
  }

  .cardHeader {
    flex-direction: column;
    align-items: stretch;
    gap: 1rem;
  }

  .cardActions {
    justify-content: center;
  }

  .taskHeader {
    flex-direction: column;
    align-items: stretch;
    gap: 1rem;
  }

  .taskMeta {
    flex-direction: column;
    gap: 0.75rem;
    align-items: flex-start;
  }

  .modal {
    margin: 0.5rem;
    max-width: none;
  }

  .modalForm {
    padding: 1.5rem;
  }

  .formRow {
    grid-template-columns: 1fr;
  }

  .modalActions {
    flex-direction: column;
    gap: 0.5rem;
  }
}

@media (max-width: 480px) {
  .managementContainer {
    gap: 1rem;
  }

  .managementHeader {
    padding: 1rem;
  }

  .itemCard,
  .taskCard {
    padding: 1rem;
  }

  .createButton {
    width: 100%;
    justify-content: center;
  }

  .emptyState {
    padding: 2rem 1rem;
  }

  .emptyIcon {
    font-size: 3rem;
  }
}

/* Mockup Management Specific Styles */
.previewContainer {
  margin: 0.5rem 0;
  border: 1px solid rgba(255, 255, 255, 0.1);
  border-radius: 6px;
  background: rgba(0, 0, 0, 0.2);
  padding: 0.75rem;
}

.previewPlaceholder {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  justify-content: center;
  color: rgba(255, 255, 255, 0.6);
  font-size: 0.85rem;
}

.previewIcon {
  font-size: 1.2rem;
}

.previewLabel {
  font-style: italic;
}

.mockupStats {
  display: grid;
  grid-template-columns: 1fr;
  gap: 0.25rem;
  margin: 0.75rem 0;
  padding: 0.75rem;
  background: rgba(0, 0, 0, 0.3);
  border-radius: 6px;
  border: 1px solid rgba(255, 255, 255, 0.1);
}

.mockupStats .statItem {
  display: flex;
  justify-content: space-between;
  align-items: center;
  font-size: 0.8rem;
}

.mockupStats .statLabel {
  color: rgba(255, 255, 255, 0.7);
  font-weight: 500;
}

.mockupStats .statValue {
  color: rgba(255, 255, 255, 0.95);
  font-weight: 600;
}

.duplicateButton {
  background: rgba(33, 150, 243, 0.2);
  border: 1px solid rgba(33, 150, 243, 0.3);
  color: #2196f3;
  border-radius: 4px;
  padding: 0.25rem 0.5rem;
  cursor: pointer;
  transition: all 0.2s ease;
  font-size: 0.85rem;
  min-width: 32px;
  height: 32px;
  display: flex;
  align-items: center;
  justify-content: center;
}

.duplicateButton:hover {
  background: rgba(33, 150, 243, 0.3);
  border-color: rgba(33, 150, 243, 0.5);
  color: #42a5f5;
}

.duplicateButton:active {
  transform: scale(0.95);
}

.tagInput {
  display: flex;
  gap: 0.5rem;
  align-items: center;
}

.tagInput .formInput {
  flex: 1;
}

.addTagButton {
  background: rgba(76, 175, 80, 0.2);
  border: 1px solid rgba(76, 175, 80, 0.3);
  color: #4caf50;
  border-radius: 4px;
  padding: 0.5rem 0.75rem;
  cursor: pointer;
  transition: all 0.2s ease;
  font-size: 0.85rem;
  min-width: auto;
  white-space: nowrap;
}

.addTagButton:hover {
  background: rgba(76, 175, 80, 0.3);
  border-color: rgba(76, 175, 80, 0.5);
  color: #66bb6a;
}

.removeTag {
  background: none;
  border: none;
  color: rgba(255, 255, 255, 0.6);
  cursor: pointer;
  font-size: 0.75rem;
  margin-left: 0.25rem;
  padding: 0.1rem;
  transition: color 0.2s ease;
}

.removeTag:hover {
  color: #f44336;
}

/* Mockup type specific card styling */
.itemCard[data-type='component'] {
  border-left: 3px solid #2196f3;
}

.itemCard[data-type='page'] {
  border-left: 3px solid #4caf50;
}

.itemCard[data-type='layout'] {
  border-left: 3px solid #ff9800;
}

.itemCard[data-type='dataset'] {
  border-left: 3px solid #9c27b0;
}

.itemCard[data-type='api'] {
  border-left: 3px solid #f44336;
}

/* Enhanced responsive design for mockup cards */
@media (max-width: 1200px) {
  .mockupStats {
    grid-template-columns: 1fr;
  }
}

@media (max-width: 768px) {
  .previewContainer {
    padding: 0.5rem;
  }

  .mockupStats .statItem {
    font-size: 0.75rem;
  }

  .duplicateButton {
    min-width: 28px;
    height: 28px;
    font-size: 0.8rem;
  }
}
